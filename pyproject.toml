[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.black]
line-length = 90
target-version = ["py311"]

[tool.codespell]
count = ''
ignore-words = "configs/dev/ignore.txt"
quiet-level = 3
skip = '.mypy,.mypy_cache,.vscore,.tox,*~,*.cache,*.lock,venv,**/data/*.json,*ignore.txt'

[tool.commitizen]
major_version_zero = true
name = "cz_conventional_commits"
tag_format = "v$version"
update_changelog_on_bump = true
version_files = [
  "README.md:^\\[!\\[release:",
  "src/knacr/constants/versions.py:^CURRENT_VER"
]
version_provider = "poetry"
version_type = "semver"

[tool.mypy]
allow_redefinition = false
# misc
allow_untyped_globals = false
check_untyped_defs = false
disallow_any_decorated = false
disallow_any_explicit = false
# any
disallow_any_expr = false
disallow_any_generics = true
disallow_any_unimported = false
disallow_incomplete_defs = true
disallow_subclassing_any = false
# functions
disallow_untyped_calls = true
disallow_untyped_decorators = false
disallow_untyped_defs = true
exclude = ["__pycache__", "\\.tox", "\\.mypy_cache", "venv"]
ignore_missing_imports = true
implicit_reexport = true
local_partial_types = true
# none
no_implicit_optional = false
plugins = "pydantic.mypy"
strict_equality = true
strict_optional = true
warn_no_return = true
# plugins
# warn
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true

[tool.poetry]
authors = ["Artur Lissin <artdotlis@pm.me>"]
description = """This project acts as a registry for \
biological resource centers (BRC) used acronyms."""
include = ["src/knacr/data/*", "src/knacr/py.typed"]
keywords = ["python", "data", "brc", "acronym"]
license = "MIT"
name = "knacr"
packages = [{include = "knacr", from = "src"}]
readme = "README.md"
repository = "https://github.com/LeibnizDSMZ/knAcr"
version = "0.6.1"

[tool.poetry.dependencies]
pydantic = ">=2.8,<3"
python = ">=3.12,<4"
requests = ">=2.31,<3"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
commitizen = ">=3.12,<4"
mypy = ">=1.7,<2"
pre-commit = ">=3.5,<4"
types-requests = ">=2.31,<3"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = ">=1.5,<2"
mkdocs-material = ">=9.4,<10"
mkdocstrings = ">=0.23,<1"
mkdocstrings-python = ">=1.7,<2"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
coverage = ">= 7.3,<8"
pytest = ">= 7.4,<8"
tox = ">=4.11,<5"

[tool.poetry.scripts]
acr_db = "knacr.main:run"

[tool.ruff]
exclude = [
  ".git",
  ".mypy_cache",
  ".ruff_cache",
  ".tox",
  ".venv",
  "__pypackages__",
  "__pycache__",
  "build",
  "dist",
  "venv"
]
line-length = 90
target-version = "py311"

[tool.ruff.lint]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
fixable = [
  "A",
  "B",
  "C",
  "D",
  "E",
  "F",
  "G",
  "I",
  "N",
  "Q",
  "S",
  "T",
  "W",
  "ANN",
  "ARG",
  "BLE",
  "COM",
  "DJ",
  "DTZ",
  "EM",
  "ERA",
  "EXE",
  "FBT",
  "ICN",
  "INP",
  "ISC",
  "NPY",
  "PD",
  "PGH",
  "PIE",
  "PL",
  "PT",
  "PTH",
  "PYI",
  "RET",
  "RSE",
  "RUF",
  "SIM",
  "SLF",
  "TCH",
  "TID",
  "TRY",
  "UP",
  "YTT"
]
ignore = ["TRY003", "N818"]
select = ["E", "F", "B", "C90", "S", "PT", "ARG", "PTH", "TRY", "RUF", "N"]
unfixable = []

[tool.ruff.lint.mccabe]
max-complexity = 11

[tool.ruff.lint.per-file-ignores]
"**/tests/*" = ["S101"]

[tool.ruff.lint.pylint]
max-args = 8

[tool.vulture]
exclude = []
ignore_decorators = []
ignore_names = []
make_whitelist = true
min_confidence = 90
paths = ["src"]
sort_by_size = true
verbose = true
